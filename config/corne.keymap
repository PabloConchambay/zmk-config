/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Define layers
#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define GMOD    3

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
            display-name = "Letras";
            bindings = <
                &kp ESC   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp RET
                &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
                &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp TAB
                          &kp LALT &kp SPACE &mo 1   &mo 2 &kp BSPC &kp LGUI
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |
            display-name = "Num";
            bindings = <
                &kp GRAVE &kp N1   &kp N2   &kp N3   &kp N4   &kp N5       &kp N6 &kp N7 &kp N8 &kp N9 &kp N0    &trans 
                &kp TAB   &kp LBKT &kp RBKT &kp LPAR &kp RPAR &tog GMOD    &kp LT &kp N4 &kp N5 &kp N6 &kp PIPE  &trans  
                &kp CARET &kp PLUS &kp MINUS &kp ASTRK &kp BSLH &kp EQUAL  &kp GT &kp N1 &kp N2 &kp N3 &kp UNDER &kp AT
                                    &trans &FSLH &trans  &trans   &kp SHFT &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |
            display-name = "Func";
            bindings = <
                &trans &kp F1 &kp F2 &kp F3 &kp  F4 &kp F5       &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11
                &trans &trans &trans &trans &btrans &trans       &trans &trans &kp UP &trans &kp QMARK &trans
                &trans &trans &trans &trans &PSCRN  &kp PG_UP    &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &trans &kp F12
                        &trans &trans  &kp PSCRN    &trans &trans &trans
            >;
        };

        GMOD {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |
            display-name = "Gaming";
            bindings = <
                &kp  ESC  &kp N1 &kp Q &kp W &kp E &kp R  &trans &trans &trans &trans &trans &trans
                &kp  SHFT &kp N2 &kp A &kp S &kp D &kp F  &trans &trans &trans &trans &trans &trans
                &kp  CTRL &kp N3 &kp Z &kp X &kp C &kp V  &trans &trans &trans &trans &trans &trans
                &kp ALT  &kp SPACE  &mo 1    &trans &trans &trans
            >;
        };
    };
};
